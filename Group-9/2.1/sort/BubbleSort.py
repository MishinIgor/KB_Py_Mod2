# 1. Сравниваем первый элемент списка с вторым.
# 2. Если первый элемент больше второго, то меняем их местами.
# 3. Переходим ко второму и второму элементу и сравниваем их, и так далее, пока не достигнем конца списка.
# 4. После первой итерации самый большой элемент окажется в конце списка.
# 5. Повторяем этот процесс для оставшихс я элементов, и каждый раз самый большой элемент "всплывает" на своё место.
# 6. Повторяем процесс до тех пор, пока список не станет упорядоченным.
def bubble_sort(arr):
    n = len(arr)
    
    # Проходим по каждому элементу массива
    for i in range(n):
        # Последние i элементов уже отсортированы,
        # поэтому мы можем их пропустить
        for j in range(0, n-i-1):
            # Если текущий элемент больше следующего,
            # меняем их местами
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
    
    return arr

def bubble_sort2(arr):
    n = len(arr)
    
    # Проходим по каждому элементу массива
    for i in range(n):
        # Проходим по элементам с конца массива до (i+1) элемента
        for j in range(n-1, i, -1):
            # Если текущий элемент меньше предыдущего,
            # меняем их местами
            if arr[j] < arr[j-1]:
                arr[j], arr[j-1] = arr[j-1], arr[j]
    
    return arr

# Пример использования
arr = [64, 34, 25, 12, 22, 11, 90]
sorted_arr = bubble_sort2(arr)
print(sorted_arr)

# Пример использования
arr = [64, 34, 25, 12, 22, 11, 90]
sorted_arr = bubble_sort(arr)
print(sorted_arr)
